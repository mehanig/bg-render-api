/* tslint:disable */
/* eslint-disable */
/**
 * BgRenderer Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    PauseProcessControllable,
    PauseProcessControllableFromJSON,
    PauseProcessControllableFromJSONTyped,
    PauseProcessControllableToJSON,
    PauseProcessState,
    PauseProcessStateFromJSON,
    PauseProcessStateFromJSONTyped,
    PauseProcessStateToJSON,
} from './';

/**
 * 
 * @export
 * @interface PauseState
 */
export interface PauseState {
    /**
     * 
     * @type {PauseProcessControllable}
     * @memberof PauseState
     */
    controllable?: PauseProcessControllable;
    /**
     * 
     * @type {PauseProcessState}
     * @memberof PauseState
     */
    state?: PauseProcessState;
    /**
     * 
     * @type {string}
     * @memberof PauseState
     */
    error?: string | null;
}

export function PauseStateFromJSON(json: any): PauseState {
    return PauseStateFromJSONTyped(json, false);
}

export function PauseStateFromJSONTyped(json: any, ignoreDiscriminator: boolean): PauseState {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'controllable': !exists(json, 'controllable') ? undefined : PauseProcessControllableFromJSON(json['controllable']),
        'state': !exists(json, 'state') ? undefined : PauseProcessStateFromJSON(json['state']),
        'error': !exists(json, 'error') ? undefined : json['error'],
    };
}

export function PauseStateToJSON(value?: PauseState | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'controllable': PauseProcessControllableToJSON(value.controllable),
        'state': PauseProcessStateToJSON(value.state),
        'error': value.error,
    };
}


